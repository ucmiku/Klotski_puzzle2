Index: Klotski puzzle/src/game_logic/AI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package game_logic;\r\n\r\nimport java.util.*;\r\n\r\npublic class AI {\r\n\r\n    //游戏状态\r\n    static class GameState{\r\n        Board board;\r\n        List<String>moveHistory;\r\n\r\n        //两种构造函数，分别对应初始化棋盘和移动后的棋盘\r\n        public GameState(Board board){\r\n            this.board = deepCopyBoard(board);\r\n            this.moveHistory = new ArrayList<>();\r\n        }\r\n\r\n        public GameState(GameState other){\r\n            this.board = deepCopyBoard(other.board);\r\n            this.moveHistory = new ArrayList<>(other.moveHistory);\r\n        }\r\n\r\n        public boolean equals(Object objects){\r\n            if(this == objects)return true;\r\n            if(!(objects instanceof GameState))return false;\r\n\r\n            GameState other = (GameState) objects;\r\n            for(int i = 0;i < 10;i++){\r\n                Block thisBlock = this.board.blocks[i];\r\n                Block otherBlock = other.board.blocks[i];\r\n                if(thisBlock.getX_cordinate() != otherBlock.getX_cordinate()\r\n                || thisBlock.getY_cordinate() != otherBlock.getY_cordinate())\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        //提高性能，使用字符串作为键记录状态\r\n        public String getStateKey(){\r\n            StringBuilder sb = new StringBuilder();\r\n            for(Block block : board.blocks){\r\n                sb.append(block.getX_cordinate()).append(',').append(block.getY_cordinate()).append('|');\r\n            }\r\n            return sb.toString();\r\n        }\r\n\r\n    }\r\n\r\n    private static Board deepCopyBoard(Board original){\r\n        Board newBoard = new Board();\r\n        for(int i = 0;i < 10;i ++){\r\n            Block originalBlock = original.blocks[i];\r\n            Block copyBlock = newBoard.blocks[i];\r\n            copyBlock.setBlock(originalBlock.getName(),\r\n                    originalBlock.getX_cordinate(),\r\n                    originalBlock.getY_cordinate(),\r\n                    originalBlock.getX_length(),\r\n                    originalBlock.getY_length());\r\n        }\r\n\r\n        boolean[][] originalAvailable = original.is_available;\r\n        boolean[][] copyAvailable = new boolean[7][6];\r\n        for (int i = 0; i < 7; i++) {\r\n            System.arraycopy(originalAvailable[i], 0, copyAvailable[i], 0, 6);\r\n        }\r\n        newBoard.setIs_available(copyAvailable);\r\n\r\n        return newBoard;\r\n    }\r\n\r\n    //BFS主体\r\n    public static List<String> solve(Board initialBoard){\r\n        //队列记录最短的路径\r\n        Queue<GameState> queue = new LinkedList<>();\r\n        //集合记录已经访问过的状态\r\n        Set<String> visited = new HashSet<>();\r\n\r\n        //初始状态\r\n        GameState initialState = new GameState(initialBoard);\r\n        queue.add(initialState);\r\n        visited.add(initialState.getStateKey());\r\n\r\n        //可能的移动方向\r\n        char[] directions = {'l','r','u','d'};\r\n\r\n        //循环主体\r\n        while(!queue.isEmpty()){\r\n            GameState currentState = queue.poll();\r\n            if (currentState.moveHistory.size() > 200) continue;\r\n\r\n            //胜利检测\r\n            if(currentState.board.blocks[0].getX_cordinate() == 2 &&\r\n                    currentState.board.blocks[0].getY_cordinate() == 4) {\r\n                return currentState.moveHistory;\r\n            }\r\n\r\n            if (visited.size() % 1000 == 0) {\r\n                System.out.println(\"已探索状态: \" + visited.size() +\r\n                        \" 队列大小: \" + queue.size());\r\n            }\r\n\r\n            //开始尝试移动每个方块的四个方向\r\n            for(int index = 0;index < 10;index ++){\r\n                if(!currentState.board.canMoveUp(currentState.board.blocks[index])&&!currentState.board.canMoveLeft(currentState.board.blocks[index])&&!currentState.board.canMoveDown(currentState.board.blocks[index])&&!currentState.board.canMoveRight(currentState.board.blocks[index])){\r\n                    continue;\r\n                }\r\n                for(char direction : directions){\r\n                    //创建新状态\r\n                    GameState newState = new GameState(currentState);\r\n                    Block targetBlock = newState.board.blocks[index];\r\n\r\n\r\n                    //移动\r\n                    newState.board.movement(direction,targetBlock);\r\n\r\n                    //检测is_available是否与之前相等，若不相等则是发生了移动\r\n                    if(newState.board.can_be_moved){\r\n                        //检测是否访问过该状态\r\n                        if(!visited.contains(newState.getStateKey())){\r\n                            newState.moveHistory.add(targetBlock.getName() + ',' + direction);\r\n                            queue.add(newState);\r\n                            visited.add(newState.getStateKey());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Collections.emptyList();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Klotski puzzle/src/game_logic/AI.java b/Klotski puzzle/src/game_logic/AI.java
--- a/Klotski puzzle/src/game_logic/AI.java	(revision 8b0bab758ab26f3e376dbe8422ef59fb809480e9)
+++ b/Klotski puzzle/src/game_logic/AI.java	(date 1747992349002)
@@ -36,12 +36,13 @@
         }
 
         //提高性能，使用字符串作为键记录状态
-        public String getStateKey(){
-            StringBuilder sb = new StringBuilder();
-            for(Block block : board.blocks){
-                sb.append(block.getX_cordinate()).append(',').append(block.getY_cordinate()).append('|');
+        public String getStateKey() {
+            char[] key = new char[10*2]; // 10个方块×2坐标
+            for(int i=0; i<10; i++) {
+                key[i*2] = (char)('A' + board.blocks[i].getX_cordinate());
+                key[i*2+1] = (char)('A' + board.blocks[i].getY_cordinate());
             }
-            return sb.toString();
+            return new String(key);
         }
 
     }
@@ -68,6 +69,7 @@
         return newBoard;
     }
 
+
     //BFS主体
     public static List<String> solve(Board initialBoard){
         //队列记录最短的路径
@@ -98,9 +100,10 @@
                 System.out.println("已探索状态: " + visited.size() +
                         " 队列大小: " + queue.size());
             }
+            int[] priorityOrder = {0, 5, 1, 2, 3, 4, 6, 7, 8, 9};
 
             //开始尝试移动每个方块的四个方向
-            for(int index = 0;index < 10;index ++){
+            for(int index : priorityOrder){
                 if(!currentState.board.canMoveUp(currentState.board.blocks[index])&&!currentState.board.canMoveLeft(currentState.board.blocks[index])&&!currentState.board.canMoveDown(currentState.board.blocks[index])&&!currentState.board.canMoveRight(currentState.board.blocks[index])){
                     continue;
                 }
Index: Klotski puzzle/src/GUI/GameBoard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport game_logic.AI;\r\nimport game_logic.Board;\r\nimport game_logic.Block;\r\nimport game_logic.Boards;\r\nimport loginmodel.LoginSystem;\r\nimport music.music;\r\nimport javax.swing.Timer;\r\nimport javax.swing.*;\r\nimport javax.tools.Tool;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Random;\r\n\r\npublic class GameBoard extends JFrame {\r\n    private static Board board;\r\n    private BlockButton selectedButton;\r\n    private JButton[] moveButton = new JButton[4];\r\n    private JButton loadgame = new JButton(\"加载游戏\");\r\n    private JButton restartgame = new JButton(\"重新开始\");\r\n    private JButton saveGame = new JButton(\"保存数据\");\r\n    private JButton withdraw = new JButton(\"撤回\");\r\n    private JButton AutoSolution = new JButton(\"召唤神力\");\r\n    private ArrayList<BlockButton> Characters = new ArrayList<>();\r\n    public static ArrayList<tool> Tools = new ArrayList<>();\r\n    private Image backgroundImage=images.backboard;\r\n    private Image chessboardImage = images.chessboardImage;\r\n\r\n    public static int seconds; // 时间\r\n    public static int seconds1;\r\n    public Timer playtime;\r\n    private JLabel timeLabel;\r\n    private JLabel timeLabel2;\r\n    private boolean isRunning = false;\r\n\r\n    JPanel BoardPanel = new JPanel(null);\r\n    JPanel GamePanel;\r\n    JPanel MovePanel = new JPanel(null);\r\n    JPanel ChessBoard = new JPanel(null);\r\n    String[] name = {\"←\",\"→\",\"↑\",\"↓\"};\r\n\r\n    public GameBoard(Board b, boolean IsVisitor)  {\r\n        board = b;\r\n        // 创建主游戏面板（带背景）\r\n        GamePanel = new JPanel() {\r\n            @Override\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n                g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), this);\r\n            }\r\n        };\r\n        GamePanel.setLayout(null);\r\n        GamePanel.setBounds(0, 0, 750, 450);\r\n        setContentPane(GamePanel);\r\n\r\n        // 创建棋盘面板\r\n        ChessBoard = new JPanel() {\r\n            @Override\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n                g.drawImage(chessboardImage, 0, 0, getWidth(), getHeight(), this);\r\n            }\r\n        };\r\n        ChessBoard.setLayout(null);\r\n        ChessBoard.setBounds(45, 47, 270, 330);\r\n\r\n        // 初始化组件\r\n        JLabel tips = new JLabel(\"请用方向键或点击按钮控制方块移动！\");\r\n        ClosingFrame closingPanel = new ClosingFrame();\r\n\r\n        BoardPanel.setBounds(0, 10, 300, 360);\r\n        BoardPanel.setOpaque(false);\r\n        GamePanel.add(BoardPanel);\r\n\r\n        MovePanel.setBounds(400,50,150,150);\r\n        MovePanel.setOpaque(false);\r\n\r\n        for(int i = 0;i < 4;i++){\r\n            moveButton[i] = new JButton(name[i]);\r\n            moveButton[i].setFont(new Font(\"SimSun\", Font.BOLD,15));\r\n            moveButton[i].setForeground(Color.BLUE);\r\n        }\r\n\r\n        moveButton[0].setBounds(0,50,50,50);\r\n        moveButton[1].setBounds(100,50,50,50);\r\n        moveButton[2].setBounds(50,0,50,50);\r\n        moveButton[3].setBounds(50,100,50,50);\r\n\r\n        //道具组件\r\n        AutoSolution.setBounds(570, 110, 100, 50);\r\n        AutoSolution.setForeground(Color.BLUE);\r\n\r\n        if(SelectLevel.level==3||SelectLevel.level==4){\r\n        addToolBlock(\"Clock\");\r\n        addToolBlock(\"Hammer\");\r\n        GamePanel.add(AutoSolution);\r\n        }\r\n\r\n        for(JButton jButton : moveButton){\r\n            MovePanel.add(jButton);\r\n        }\r\n\r\n        GamePanel.add(MovePanel);\r\n        MovePanel.setVisible(true);\r\n\r\n        setTitle(\"三国华容道\");\r\n        setSize(new Dimension(750, 450));\r\n        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);\r\n        setLocationRelativeTo(null);\r\n\r\n        // 设置按钮\r\n        saveGame.setBounds(330, 270, 100, 50);\r\n        saveGame.setForeground(Color.BLUE);\r\n        if (!IsVisitor) GamePanel.add(saveGame);\r\n\r\n        withdraw.setBounds(450, 270, 100, 50);\r\n        withdraw.setForeground(Color.BLUE);\r\n        GamePanel.add(withdraw);\r\n\r\n        restartgame.setBounds(450,340,100,50);\r\n        restartgame.setForeground(Color.BLUE);\r\n        GamePanel.add(restartgame);\r\n\r\n        loadgame.setBounds(330,340,100,50);\r\n        loadgame.setForeground(Color.BLUE);\r\n        if (!IsVisitor) GamePanel.add(loadgame);\r\n\r\n        // 提示标签\r\n        tips.setBounds(330, 230, 400, 30);\r\n        tips.setForeground(Color.WHITE);\r\n        tips.setFont(new Font(\"宋体\", Font.BOLD, 15));\r\n        tips.setOpaque(false);\r\n        GamePanel.add(tips);\r\n\r\n        // 时间标签\r\n        timeLabel = new JLabel(\"00:00\");\r\n        timeLabel.setBounds(330, 180, 150, 30);\r\n        timeLabel.setFont(new Font(\"SimSun\", Font.BOLD, 30));\r\n        timeLabel.setForeground(Color.WHITE);\r\n        timeLabel.setOpaque(false);\r\n        timeLabel2 = new JLabel(\"00:00\");\r\n        timeLabel2.setBounds(332, 182, 150, 30);\r\n        timeLabel2.setFont(new Font(\"SimSun\", Font.BOLD, 31));\r\n        timeLabel2.setForeground(Color.BLACK);\r\n        timeLabel2.setOpaque(false);\r\n        GamePanel.add(timeLabel);\r\n        GamePanel.add(timeLabel2);\r\n\r\n        if (SelectLevel.level==1){ //关卡1：随机删除一个除了曹操以外的方块\r\n            Random rand = new Random();\r\n            int index = rand.nextInt(8) + 1;\r\n            for(int i = board.blocks[index].getY_cordinate();i <= board.blocks[index].getY_cordinate() + board.blocks[index].getY_length() - 1;i++)\r\n                for(int j = board.blocks[index].getX_cordinate();j <= board.blocks[index].getX_cordinate() + board.blocks[index].getX_length() - 1;j++){\r\n                    board.changeIs_available(i,j,true);\r\n                }\r\n            board.blocks[index].setX_cordinate(0);\r\n            board.blocks[index].setY_cordinate(0);\r\n            Characters.get(index).setLocation(0,0);\r\n            Characters.get(index).setVisible(false);\r\n        }\r\n\r\n        // 添加棋子块\r\n        for (int i = 0; i < 10; i++) {\r\n            addChessBlock(board.blocks[i].getName(),\r\n                    board.blocks[i].getX_length(),\r\n                    board.blocks[i].getY_length(),\r\n                    board.blocks[i].getX_cordinate(),\r\n                    board.blocks[i].getY_cordinate());\r\n        }\r\n\r\n\r\n        // 按钮事件监听\r\n        withdraw.addActionListener(e -> {\r\n            if (!board.getProcess().isEmpty()) {\r\n                if(!board.withdraw()){\r\n                    try {\r\n                        b.getLoginSystem().reread(board);\r\n                        if(board.getLoginSystem().ReadError){\r\n                            JOptionPane.showMessageDialog(GamePanel,\"数据损坏，已创建新游戏！\");\r\n                            for(int i = 0;i < 10 ;i++){\r\n                                if(Characters.get(i).getX() != board.blocks[i].getX_cordinate() * 60 || Characters.get(i).getY() != board.blocks[i].getY_cordinate() * 60)animateMove(Characters.get(i),board.blocks[i].getX_cordinate() * 60,board.blocks[i].getY_cordinate() * 60);\r\n                            }\r\n                            restartGameTimer();\r\n                            BoardPanel.requestFocus();\r\n                            return;\r\n                        }\r\n                    } catch (FileNotFoundException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n                }\r\n                for (BlockButton b1 : Characters) {\r\n                    if (b1.getName().equals(board.getWithdrawName())) {\r\n                        animateMove(b1,board.blocks[board.getWithdrawBlockNumber()].getX_cordinate() * 60,\r\n                                board.blocks[board.getWithdrawBlockNumber()].getY_cordinate() * 60);\r\n                    }\r\n                }\r\n                BoardPanel.repaint();\r\n            } else {\r\n                JOptionPane.showMessageDialog(GamePanel, \"无可撤回的步数！\");\r\n            }\r\n            BoardPanel.requestFocus();\r\n        });\r\n\r\n        saveGame.addActionListener(e -> {\r\n            b.getLoginSystem().save(board.getcordinate(), board.getProcess());\r\n            JOptionPane.showMessageDialog(GamePanel, \"已保存游戏记录！\");\r\n            SelectLevel.l4.setVisible(true);\r\n            BoardPanel.requestFocus();\r\n        });\r\n\r\n        loadgame.addActionListener(e -> {\r\n            try {\r\n                pauseGameTimer();\r\n                board = b.getLoginSystem().readdata(b);\r\n                for(int i = 0;i < 10 ;i++){\r\n                    if(Characters.get(i).getX() != board.blocks[i].getX_cordinate() * 60 || Characters.get(i).getY() != board.blocks[i].getY_cordinate() * 60)animateMove(Characters.get(i),board.blocks[i].getX_cordinate() * 60,board.blocks[i].getY_cordinate() * 60);                    repaint();\r\n                }\r\n                startGameTimer();\r\n                updateTimeLabel();\r\n            } catch (FileNotFoundException ex) {\r\n                throw new RuntimeException(ex);\r\n            }\r\n            BoardPanel.requestFocus();\r\n        });\r\n\r\n        restartgame.addActionListener(e -> {\r\n            pauseGameTimer();\r\n            board = new Board();\r\n            if(SelectLevel.level==3||SelectLevel.level==4){\r\n            Tools.get(0).setUsed(false);\r\n            Tools.get(1).setUsed(false);\r\n            }\r\n            if(SelectLevel.level == 2){\r\n                Random rand = new Random();\r\n                board = new Boards().boards[rand.nextInt(5)];\r\n            }\r\n            for(int i = 0;i < 10 ;i++){\r\n                if(Characters.get(i).getX() != board.blocks[i].getX_cordinate() * 60 || Characters.get(i).getY() != board.blocks[i].getY_cordinate() * 60){\r\n                    Characters.get(i).setVisible(true);\r\n                    animateMove(Characters.get(i),board.blocks[i].getX_cordinate() * 60,board.blocks[i].getY_cordinate() * 60);\r\n                }\r\n            }\r\n            restartGameTimer();\r\n            BoardPanel.requestFocus();\r\n        });\r\n\r\n        AutoSolution.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                ArrayList<String> str = (ArrayList<String>) AI.solve(board);\r\n                str.removeLast();\r\n                Timer solutionTimer = new Timer(300, new ActionListener() {\r\n                    private int currentStep = 0;\r\n\r\n                    @Override\r\n                    public void actionPerformed(ActionEvent timerEvent) {\r\n                        if (currentStep >= str.size()) {\r\n                            ((Timer)timerEvent.getSource()).stop();\r\n                            return;\r\n                        }\r\n\r\n                        String solution = str.get(currentStep++);\r\n                        char[] c = solution.toCharArray();\r\n                        StringBuilder sb = new StringBuilder();\r\n                        for(char c1 : c){\r\n                            if(c1 == ',') break;\r\n                            sb.append(c1);\r\n                        }\r\n                        String characterName = sb.toString();\r\n                        char direction = solution.charAt(solution.length() - 1);\r\n\r\n                        for (int i = 0; i < 10; i++) {\r\n                            if (Characters.get(i).getName().equals(characterName)) {\r\n                                board.movement(direction, board.blocks[i]);\r\n                                animateMoveSlow(Characters.get(i),\r\n                                        board.blocks[i].getX_cordinate() * 60,\r\n                                        board.blocks[i].getY_cordinate() * 60);\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        BoardPanel.repaint();\r\n                        BoardPanel.requestFocus();\r\n                    }\r\n                });\r\n\r\n                solutionTimer.start();\r\n                BoardPanel.requestFocus();\r\n            }\r\n        });\r\n\r\n        //左方向键\r\n        moveButton[0].addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(selectedButton == null){\r\n                    JOptionPane.showMessageDialog(GamePanel,\"请选择一个方块！\");\r\n                    return;\r\n                }\r\n                for (Block block : board.blocks) {\r\n                    if (block.getName().equals(selectedButton.getName())) {\r\n                        board.movement('l', block);\r\n                        if(block.getX_cordinate() * 60 != selectedButton.getX() || block.getY_cordinate() * 60 != selectedButton.getY())animateMove(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60);\r\n                        else animateMove2(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60,'l');\r\n                        if (board.isVictory()) {\r\n                            winpanel frame = new winpanel();\r\n                            frame.addjpg();\r\n                            pauseGameTimer();\r\n                            dispose();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                BoardPanel.requestFocus();\r\n            }\r\n        });\r\n\r\n        //右方向键\r\n        moveButton[1].addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(selectedButton == null){\r\n                    JOptionPane.showMessageDialog(GamePanel,\"请选择一个方块！\");\r\n                    return;\r\n                }\r\n                for (Block block : board.blocks) {\r\n                    if (block.getName().equals(selectedButton.getName())) {\r\n                        board.movement('r', block);\r\n                        if(block.getX_cordinate() * 60 != selectedButton.getX() || block.getY_cordinate() * 60 != selectedButton.getY())animateMove(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60);\r\n                        else animateMove2(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60,'r');\r\n                        if (board.isVictory()) {\r\n                            winpanel frame = new winpanel();\r\n                            frame.addjpg();\r\n                            pauseGameTimer();\r\n                            dispose();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                BoardPanel.requestFocus();\r\n            }\r\n        });\r\n\r\n        //上方向键\r\n        moveButton[2].addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(selectedButton == null){\r\n                    JOptionPane.showMessageDialog(GamePanel,\"请选择一个方块！\");\r\n                    return;\r\n                }\r\n                for (Block block : board.blocks) {\r\n                    if (block.getName().equals(selectedButton.getName())) {\r\n                        board.movement('u', block);\r\n                        if(block.getX_cordinate() * 60 != selectedButton.getX() || block.getY_cordinate() * 60 != selectedButton.getY())animateMove(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60);\r\n                        else animateMove2(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60,'u');\r\n                        if (board.isVictory()) {\r\n                            winpanel frame = new winpanel();\r\n                            frame.addjpg();\r\n                            pauseGameTimer();\r\n                            dispose();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                BoardPanel.requestFocus();\r\n            }\r\n        });\r\n\r\n        //下方向键\r\n        moveButton[3].addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(selectedButton == null){\r\n                    JOptionPane.showMessageDialog(GamePanel,\"请选择一个方块！\");\r\n                    return;\r\n                }\r\n                for (Block block : board.blocks) {\r\n                    if (block.getName().equals(selectedButton.getName())) {\r\n                        board.movement('d', block);\r\n                        if(block.getX_cordinate() * 60 != selectedButton.getX() || block.getY_cordinate() * 60 != selectedButton.getY())animateMove(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60);\r\n                        else animateMove2(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60,'d');\r\n                        if (board.isVictory()) {\r\n                            winpanel frame = new winpanel();\r\n                            frame.addjpg();\r\n                            pauseGameTimer();\r\n                            dispose();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                BoardPanel.requestFocus();\r\n            }\r\n        });\r\n\r\n        // 键盘监听\r\n        BoardPanel.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                music.playsound();\r\n                if (selectedButton == null) return;\r\n\r\n                char c;\r\n                switch (e.getKeyCode()) {\r\n                    case KeyEvent.VK_UP -> c = 'u';\r\n                    case KeyEvent.VK_DOWN -> c = 'd';\r\n                    case KeyEvent.VK_LEFT -> c = 'l';\r\n                    case KeyEvent.VK_RIGHT -> c = 'r';\r\n                    default -> { return; }\r\n                }\r\n                music.playsound();\r\n                for (Block block : board.blocks) {\r\n                    if (block.getName().equals(selectedButton.getName())) {\r\n                        board.movement(c, block);\r\n                        if(block.getX_cordinate() * 60 != selectedButton.getX() || block.getY_cordinate() * 60 != selectedButton.getY())animateMove(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60);\r\n                        else animateMove2(selectedButton,block.getX_cordinate() * 60,block.getY_cordinate() * 60,c);\r\n                        if (board.isVictory()) {\r\n                            winpanel frame = new winpanel();\r\n                            frame.addjpg();\r\n                            pauseGameTimer();\r\n                            dispose();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // 窗口关闭事件\r\n        addWindowListener(new WindowAdapter() {\r\n            @Override\r\n            public void windowClosing(WindowEvent e) {\r\n                if (IsVisitor) System.exit(0);\r\n                closingPanel.setVisible(true);\r\n                closingPanel.Yes.addActionListener(ev -> {\r\n                    b.getLoginSystem().save(board.getcordinate(), board.getProcess());\r\n                    SelectLevel.l4.setVisible(true);\r\n                    System.exit(0);\r\n                });\r\n                closingPanel.No.addActionListener(ev -> {\r\n                    closingPanel.setVisible(false);\r\n                    System.exit(0);\r\n                });\r\n            }\r\n        });\r\n\r\n        // 计时器设置\r\n        playtime = new Timer(1000, e -> {\r\n            if (isRunning) {\r\n                seconds--;\r\n                seconds1++;\r\n                if (seconds <= 0) {\r\n                    dispose();\r\n                    losepanel panel = new losepanel();\r\n                    panel.addjpg();\r\n                    pauseGameTimer();\r\n                }\r\n                updateTimeLabel();\r\n            }\r\n        });\r\n\r\n        startGameTimer();\r\n        BoardPanel.setFocusable(true);\r\n        BoardPanel.requestFocus();\r\n        GamePanel.add(ChessBoard);\r\n        ChessBoard.setVisible(true);\r\n    }\r\n\r\n    private void addChessBlock(String name, int width, int height, int x, int y) {\r\n        BlockButton button = new BlockButton(width * 60, height * 60, false, name);\r\n        button.setBounds(0,0,width * 60,height * 60);\r\n        Characters.add(button);\r\n        if(x == 0 && y == 0)Characters.getLast().setVisible(false);\r\n        animateMove(button,x * 60,y * 60);\r\n\r\n        button.addMouseListener(new MouseAdapter() {\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n                if (selectedButton != null) {\r\n                    selectedButton.setSelected(false);\r\n                }\r\n                selectedButton = (selectedButton != button) ? button : null;\r\n                if (selectedButton != null) {\r\n                    selectedButton.setSelected(true);\r\n                }\r\n            }\r\n        });\r\n\r\n        GamePanel.add(button);\r\n    }\r\n\r\n    private void addToolBlock(String name) {\r\n        tool button = new tool(60,60,name);\r\n        button.setBounds(570,200 + 70 * tool.i,60,60);\r\n        Tools.add(button);\r\n        if(tool.i==1&&SelectLevel.level==4){\r\n            button.setUsed(LoginSystem.tool1 != 1);\r\n        }else if(tool.i==2&&SelectLevel.level==4){\r\n            button.setUsed(LoginSystem.tool2 != 1);\r\n        }\r\n        System.out.println(tool.i);\r\n            button.addMouseListener(new MouseAdapter() {\r\n                @Override\r\n                public void mouseClicked(MouseEvent e) {\r\n                    GamePanel.requestFocus();\r\n                    if(!button.isUsed()){\r\n                        switch (name){\r\n                            case \"Clock\" -> {\r\n                                button.setUsed(true);\r\n                                ToolClock();\r\n                                button.repaint();\r\n                            }\r\n                            case \"Hammer\" -> {\r\n                                button.setUsed(true);\r\n                                deleteZu();\r\n                                button.repaint();\r\n                            }\r\n                        }\r\n                    }\r\n                    BoardPanel.requestFocus();\r\n                }\r\n            });\r\n\r\n        GamePanel.add(button);\r\n    }\r\n\r\n    private void ToolClock(){\r\n        pauseGameTimer();\r\n        plusGameTimer();\r\n    }\r\n\r\n    private void deleteZu(){\r\n        Random rand = new Random();\r\n        int index = rand.nextInt(4) + 6;\r\n        board.changeIs_available(board.blocks[index].getY_cordinate(),board.blocks[index].getX_cordinate(),true);\r\n        board.blocks[index].setX_cordinate(0);\r\n        board.blocks[index].setY_cordinate(0);\r\n        Characters.get(index).setLocation(0,0);\r\n        Characters.get(index).setVisible(false);\r\n    }\r\n\r\n    public void updateTimeLabel() {\r\n        int minutes = (seconds % 3600) / 60;\r\n        int secs = seconds % 60;\r\n        timeLabel.setText(String.format(\"%02d:%02d\", minutes, secs));\r\n        timeLabel2.setText(String.format(\"%02d:%02d\", minutes, secs));\r\n    }\r\n\r\n    private void restartGameTimer(){\r\n        seconds = 300;\r\n        isRunning = true;\r\n        playtime.start();\r\n        updateTimeLabel();\r\n    }\r\n\r\n    private void plusGameTimer(){\r\n        Random rand = new Random();\r\n        seconds += rand.nextInt(150) + 30;\r\n        isRunning = true;\r\n        playtime.start();\r\n        updateTimeLabel();\r\n    }\r\n\r\n    private void startGameTimer() {\r\n        seconds = (board.getLoginSystem().loginStatus == 1) ?\r\n                board.getLoginSystem().time : 300;\r\n        isRunning = true;\r\n        playtime.start();\r\n        updateTimeLabel();\r\n    }\r\n\r\n    private void pauseGameTimer() {\r\n        isRunning = false;\r\n        playtime.stop();\r\n    }\r\n\r\n    public static Board getBoard() {\r\n        return board;\r\n    }\r\n\r\n    //移动动画实现\r\n    private void animateMove(BlockButton button,int finalX,int finalY){\r\n\r\n        final int startX = button.getX();\r\n        final int startY = button.getY();\r\n        final int animationSteps = 10;\r\n        final int animationDelay = 4;\r\n\r\n        //总移动距离\r\n        int totalXmove = finalX - startX;\r\n        int totalYmove = finalY - startY;\r\n\r\n\r\n        new Timer(animationDelay, new ActionListener() {\r\n            private int currentStep = 0;\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                int x;\r\n                int y;\r\n                float progress = easeOutQuad((float)++currentStep / animationSteps);\r\n                x = startX + (int)(totalXmove * progress);\r\n                y = startY + (int)(totalYmove * progress);\r\n                button.setLocation(x,y);\r\n                BoardPanel.repaint();\r\n                if(currentStep >= animationSteps){\r\n                    button.setLocation(finalX,finalY);\r\n                    ((Timer)e.getSource()).stop();\r\n                    BoardPanel.repaint();\r\n                }\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    private void animateMoveSlow(BlockButton button,int finalX,int finalY){\r\n\r\n        final int startX = button.getX();\r\n        final int startY = button.getY();\r\n        final int animationSteps = 10;\r\n        final int animationDelay = 40;\r\n\r\n        //总移动距离\r\n        int totalXmove = finalX - startX;\r\n        int totalYmove = finalY - startY;\r\n\r\n        new Timer(animationDelay, new ActionListener() {\r\n            private int currentStep = 0;\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                int x;\r\n                int y;\r\n                float progress = easeOutQuad((float)++currentStep / animationSteps);\r\n                x = startX + (int)(totalXmove * progress);\r\n                y = startY + (int)(totalYmove * progress);\r\n                button.setLocation(x,y);\r\n                BoardPanel.repaint();\r\n                if(currentStep >= animationSteps){\r\n                    button.setLocation(finalX,finalY);\r\n                    ((Timer)e.getSource()).stop();\r\n                    BoardPanel.repaint();\r\n                }\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    private void animateMove2(BlockButton button,int finalX,int finalY,char direction){\r\n        final int startX = button.getX();\r\n        final int startY = button.getY();\r\n        final int animationSteps = 10;\r\n        final int animationDelay = 6;\r\n\r\n        int dx = 0;\r\n        int dy = 0;//实现对边缘碰撞发生震动的小动画\r\n\r\n        switch (direction){\r\n            case 'u' -> dy = -5;\r\n            case 'r' -> dx = 5;\r\n            case 'd' -> dy = 5;\r\n            case 'l' -> dx = -5;\r\n        }\r\n\r\n        //总移动距离\r\n        int totalXmove = finalX + dx - startX;\r\n        int totalYmove = finalY + dy- startY;\r\n\r\n\r\n        new Timer(animationDelay, new ActionListener() {\r\n            private int currentStep = 0;\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                int x;\r\n                int y;\r\n                float progress = easeOutQuad((float)++currentStep / animationSteps);\r\n                x = startX + (int)(totalXmove * progress);\r\n                y = startY + (int)(totalYmove * progress);\r\n                button.setLocation(x,y);\r\n                BoardPanel.repaint();\r\n                if(currentStep >= animationSteps){\r\n                    button.setLocation(finalX,finalY);\r\n                    ((Timer)e.getSource()).stop();\r\n                    BoardPanel.repaint();\r\n                }\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    private float easeOutQuad(float progress) {\r\n        return 1 - (1 - progress) * (1 - progress);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Klotski puzzle/src/GUI/GameBoard.java b/Klotski puzzle/src/GUI/GameBoard.java
--- a/Klotski puzzle/src/GUI/GameBoard.java	(revision 8b0bab758ab26f3e376dbe8422ef59fb809480e9)
+++ b/Klotski puzzle/src/GUI/GameBoard.java	(date 1747986764105)
@@ -621,7 +621,7 @@
         final int startX = button.getX();
         final int startY = button.getY();
         final int animationSteps = 10;
-        final int animationDelay = 40;
+        final int animationDelay = 4;
 
         //总移动距离
         int totalXmove = finalX - startX;
Index: 12.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>12\r\n292\r\n2\r\n1\r\n1\r\n1\r\n1\r\n3\r\n1\r\n3\r\n4\r\n4\r\n1\r\n4\r\n4\r\n3\r\n3\r\n1\r\n3\r\n1\r\n4\r\n2\r\n3\r\n2\r\n4
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/12.txt b/12.txt
--- a/12.txt	(revision 8b0bab758ab26f3e376dbe8422ef59fb809480e9)
+++ b/12.txt	(date 1747992465725)
@@ -1,25 +1,25 @@
 12
-292
+297
 2
 1
 1
+2
 1
 1
-3
 1
-3
-4
-4
 1
+3
+2
 4
 4
 3
+2
 3
+4
 1
-3
+4
+2
 1
+5
 4
-2
-3
-2
-4
\ No newline at end of file
+5
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"efebb8c9-f26c-4964-8fd9-4386004ec8b4\" name=\"更改\" comment=\"完善了继续游戏按钮，更新了io\">\r\n      <change afterPath=\"$PROJECT_DIR$/Klotski puzzle/src/GUI/listenboard.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Klotski puzzle/src/watch/Client.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Klotski puzzle/src/watch/Server.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Klotski puzzle/src/GUI/GameBoard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Klotski puzzle/src/GUI/GameBoard.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Klotski puzzle/src/GUI/SelectLevel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Klotski puzzle/src/GUI/SelectLevel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$10.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$10.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$11.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$11.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$12.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$12.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$3.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$4.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$4.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$5.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$5.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$6.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$6.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$7.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$7.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$8.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$8.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$9.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$9.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ChangesViewManager\" show_ignored=\"true\">\r\n    <option name=\"groupingKeys\">\r\n      <option value=\"module\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;ucmiku&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/ucmiku/Klotski_puzzle2.git&quot;,\r\n    &quot;accountId&quot;: &quot;17924a58-298e-47d6-9d8d-06daeed3d3e5&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2wOPoOGli6DPcFpFOh0iC6vDTV7\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/16598/Desktop/Klotski puzzle&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,\r\n    &quot;应用程序.GUItest.executor&quot;: &quot;Run&quot;,\r\n    &quot;应用程序.Main.executor&quot;: &quot;Run&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;ChangesTree.GroupingKeys&quot;: [\r\n      &quot;directory&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"efebb8c9-f26c-4964-8fd9-4386004ec8b4\" name=\"更改\" comment=\"\" />\r\n      <created>1745909820899</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1745909820899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"更新了关卡，但是有一些bug\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747879077869</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747879077869</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"增加了一些注释\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747879874374</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747879874374</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"测试上传下载\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747881237862</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747881237862</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"5.22提交初始版本\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747881563438</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747881563438</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"测试上传下载\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747881940403</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747881940403</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"5.22版本\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747882668917</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747882668917</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"增加了一些注释\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747882888461</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747882888461</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"更改了选择关卡逻辑（未完成）\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747887011387</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747887011387</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"1.更改了选择关卡逻辑:选择关卡一律创建新的关卡，只有选择继续游戏才能加载上次玩的关卡。&#10;2.选观后时间重置\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747890377825</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747890377825</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"更新了胜利之后切换为选关界面\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747891518827</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747891518827</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"更新了失败之后切换为选关界面\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747891756210</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747891756210</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"更新了时间道具的机制\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747891870780</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747891870780</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"完善了继续游戏按钮，更新了io\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747923602631</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747923602631</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"更新了关卡，但是有一些bug\" />\r\n    <MESSAGE value=\"5.22提交初始版本\" />\r\n    <MESSAGE value=\"测试上传下载\" />\r\n    <MESSAGE value=\"5.22版本\" />\r\n    <MESSAGE value=\"增加了一些注释\" />\r\n    <MESSAGE value=\"更改了选择关卡逻辑（未完成）\" />\r\n    <MESSAGE value=\"1.更改了选择关卡逻辑:选择关卡一律创建新的关卡，只有选择继续游戏才能加载上次玩的关卡。&#10;2.选观后时间重置\" />\r\n    <MESSAGE value=\"更新了胜利之后切换为选关界面\" />\r\n    <MESSAGE value=\"更新了失败之后切换为选关界面\" />\r\n    <MESSAGE value=\"更新了时间道具的机制\" />\r\n    <MESSAGE value=\"完善了继续游戏按钮，更新了io\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"完善了继续游戏按钮，更新了io\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.NoSuchElementException\" package=\"java.util\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8b0bab758ab26f3e376dbe8422ef59fb809480e9)
+++ b/.idea/workspace.xml	(date 1748003902305)
@@ -5,23 +5,14 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="efebb8c9-f26c-4964-8fd9-4386004ec8b4" name="更改" comment="完善了继续游戏按钮，更新了io">
-      <change afterPath="$PROJECT_DIR$/Klotski puzzle/src/GUI/listenboard.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Klotski puzzle/src/watch/Client.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Klotski puzzle/src/watch/Server.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/12.txt" beforeDir="false" afterPath="$PROJECT_DIR$/12.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/123.txt" beforeDir="false" afterPath="$PROJECT_DIR$/123.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Klotski puzzle/src/GUI/GameBoard.java" beforeDir="false" afterPath="$PROJECT_DIR$/Klotski puzzle/src/GUI/GameBoard.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Klotski puzzle/src/GUI/SelectLevel.java" beforeDir="false" afterPath="$PROJECT_DIR$/Klotski puzzle/src/GUI/SelectLevel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$10.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$10.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$11.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$11.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$12.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$12.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$3.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$4.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$4.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$5.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$5.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$6.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$6.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$7.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$7.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$8.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$8.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$9.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard$9.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Klotski puzzle/src/game_logic/AI.java" beforeDir="false" afterPath="$PROJECT_DIR$/Klotski puzzle/src/game_logic/AI.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/GameBoard.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/SelectLevel$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/SelectLevel$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/SelectLevel.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Klotski puzzle/GUI/SelectLevel.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: 123.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>123\r\n282\r\n2\r\n1\r\n1\r\n1\r\n4\r\n1\r\n1\r\n4\r\n4\r\n4\r\n3\r\n3\r\n2\r\n3\r\n1\r\n3\r\n3\r\n5\r\n3\r\n4\r\nzuthree,d\r\nzuthree,l\r\nzufour,l\r\nzufour,u\r\nzhaoyun,d\r\nguanyu,r\r\nzutwo,u\r\nzuthree,r\r\nzuone,r\r\nmachao,d\r\nhuangzhong,d\r\nhuangzhong,u\r\nzutwo,l\r\nzuone,u\r\nzuone,u
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/123.txt b/123.txt
--- a/123.txt	(revision 8b0bab758ab26f3e376dbe8422ef59fb809480e9)
+++ b/123.txt	(date 1748003822830)
@@ -1,37 +1,25 @@
 123
-282
+299
 2
 1
 1
+2
 1
-4
 1
 1
 4
-4
-4
+1
+1
 3
+4
 3
 2
 3
 1
-3
-3
 5
+2
+4
 3
 4
-zuthree,d
-zuthree,l
-zufour,l
-zufour,u
-zhaoyun,d
-guanyu,r
-zutwo,u
-zuthree,r
-zuone,r
-machao,d
-huangzhong,d
-huangzhong,u
-zutwo,l
-zuone,u
-zuone,u
\ No newline at end of file
+4
+5
\ No newline at end of file
